
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // By default, deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow users to read and write their own profile data.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null; // Any authenticated user can create their own profile
    }

    // Allow users to manage their own notes.
    match /users/{userId}/notes/{noteId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow users to manage their own files.
    match /users/{userId}/files/{fileId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow users to manage their own tags.
    match /users/{userId}/tags/{tagId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow users to manage conversations they are part of.
    match /conversations/{conversationId} {
      // Users can read/update a conversation if they are a participant.
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participantIds;
      // Any authenticated user can create a new conversation.
      allow create: if request.auth != null;
    }

    // Allow users to read/write messages in conversations they are part of.
    match /conversations/{conversationId}/messages/{messageId} {
      allow read, create: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
      // Generally, don't allow message updates or deletes for data integrity.
      allow update, delete: if false;
    }
  }
}
