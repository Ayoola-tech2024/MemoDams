rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for the users collection itself
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Rules for listing user sub-collections
    match /users/{userId}/notes {
      allow list, create: if request.auth.uid == userId;
    }
    match /users/{userId}/files {
      allow list, create: if request.auth.uid == userId;
    }
    match /users/{userId}/tags {
      allow list, create: if request.auth.uid == userId;
    }
    match /conversations {
       allow list, create: if request.auth.uid != null && request.auth.uid in request.resource.data.participantIds;
    }
     match /conversations/{conversationId}/messages {
      allow list, create: if request.auth.uid != null && resource.data.senderId == request.auth.uid;
    }
    

    // Rules for accessing individual documents in sub-collections
    match /users/{userId}/notes/{noteId} {
      allow read, update, delete: if request.auth.uid == userId;
    }
    match /users/{userId}/files/{fileId} {
      allow read, update, delete: if request.auth.uid == userId;
    }
    match /users/{userId}/tags/{tagId} {
      allow read, update, delete: if request.auth.uid == userId;
    }
    match /conversations/{conversationId} {
      allow read, update: if request.auth.uid in resource.data.participantIds;
    }
     match /conversations/{conversationId}/messages/{messageId} {
      allow read: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
    }
  }
}