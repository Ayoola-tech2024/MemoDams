rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId} {
      // Allow users to read, create, and update their own profile.
      allow read, write: if isOwner(userId);
      // Allow any authenticated user to create their own user document during signup.
      allow create: if request.auth != null;

      // Users can manage their own subcollections
      match /notes/{noteId} {
        allow read, write: if isOwner(userId);
      }
      match /tags/{tagId} {
        allow read, write: if isOwner(userId);
      }
      match /files/{fileId} {
        allow read, write: if isOwner(userId);
      }
      match /conversations/{conversationId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    match /conversations/{conversationId} {
      allow read, update: if request.auth.uid in resource.data.participantIds;
      allow create: if request.auth.uid in request.resource.data.participantIds;

      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
      }
    }

    match /sharedNotes/{noteId} {
      allow get;
      allow read: if true;
      allow write: if false; // Only server-side (admin) can write
    }
  }
}
