
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the MemoDams application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user.",
          "format": "uuid"
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "Full name of the user."
        },
        "bio": {
          "type": "string",
          "description": "Short biography or description of the user."
        },
        "profilePictureUrl": {
          "type": "string",
          "description": "URL of the user's profile picture.",
          "format": "uri"
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was created.",
          "format": "date-time"
        },
        "birthday": {
          "type": "string",
          "description": "User's birthday.",
          "format": "date"
        }
      },
      "required": [
        "id",
        "email",
        "name",
        "createdAt"
      ]
    },
    "Note": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Note",
      "type": "object",
      "description": "Represents a note created by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the note."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who created the note. (Relationship: User 1:N Note)"
        },
        "title": {
          "type": "string",
          "description": "Title of the note."
        },
        "content": {
          "type": "string",
          "description": "Content of the note (rich text or markdown)."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the note was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the note was last updated.",
          "format": "date-time"
        },
        "tagIds": {
          "type": "array",
          "description": "References to Tags associated with the note. (Relationship: Tag N:N Note)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "userId",
        "title",
        "content",
        "createdAt",
        "updatedAt"
      ]
    },
    "Tag": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Tag",
      "type": "object",
      "description": "Represents a tag or category for notes.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the tag."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who created the tag. (Relationship: User 1:N Tag)"
        },
        "name": {
          "type": "string",
          "description": "Name of the tag."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the tag was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "name",
        "createdAt"
      ]
    },
    "File": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "File",
      "type": "object",
      "description": "Represents a file uploaded by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the file."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who uploaded the file. (Relationship: User 1:N File)"
        },
        "name": {
          "type": "string",
          "description": "Original name of the file."
        },
        "url": {
          "type": "string",
          "description": "URL of the file stored in Firebase Storage.",
          "format": "uri"
        },
        "uploadDate": {
          "type": "string",
          "description": "Timestamp indicating when the file was uploaded.",
          "format": "date-time"
        },
        "fileType": {
          "type": "string",
          "description": "MIME type of the file."
        },
        "fileSize": {
          "type": "number",
          "description": "Size of the file in bytes."
        }
      },
      "required": [
        "id",
        "userId",
        "name",
        "url",
        "uploadDate"
      ]
    },
    "Conversation": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Conversation",
      "type": "object",
      "description": "Represents a messaging conversation between two or more users.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the conversation." },
        "participantIds": {
          "type": "array",
          "description": "Array of user IDs participating in the conversation.",
          "items": { "type": "string" }
        },
        "lastMessage": {
          "type": "object",
          "properties": {
            "text": { "type": "string", "description": "The text of the last message." },
            "senderId": { "type": "string", "description": "The ID of the user who sent the last message." },
            "createdAt": { "type": "string", "format": "date-time", "description": "Timestamp of the last message." }
          }
        },
        "createdAt": { "type": "string", "format": "date-time", "description": "Timestamp when the conversation was created." },
        "updatedAt": { "type": "string", "format": "date-time", "description": "Timestamp when the conversation was last updated." }
      },
      "required": ["id", "participantIds", "createdAt", "updatedAt"]
    },
    "Message": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Message",
      "type": "object",
      "description": "Represents a single message within a conversation.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the message." },
        "conversationId": { "type": "string", "description": "The ID of the conversation this message belongs to." },
        "senderId": { "type": "string", "description": "The ID of the user who sent the message." },
        "text": { "type": "string", "description": "The content of the message." },
        "createdAt": { "type": "string", "format": "date-time", "description": "Timestamp when the message was sent." }
      },
      "required": ["id", "conversationId", "senderId", "text", "createdAt"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous",
      "google.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. The 'userId' parameter corresponds to the Firebase Auth UID.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, matching their Firebase Auth UID."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/notes/{noteId}",
        "definition": {
          "entityName": "Note",
          "schema": {
            "$ref": "#/backend/entities/Note"
          },
          "description": "Stores notes created by a specific user. The 'userId' path parameter ensures that only the authenticated user can access their own notes.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, matching their Firebase Auth UID."
            },
            {
              "name": "noteId",
              "description": "The unique identifier for the note."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/tags/{tagId}",
        "definition": {
          "entityName": "Tag",
          "schema": {
            "$ref": "#/backend/entities/Tag"
          },
          "description": "Stores tags created by a specific user. The 'userId' path parameter ensures that only the authenticated user can access their own tags.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, matching their Firebase Auth UID."
            },
            {
              "name": "tagId",
              "description": "The unique identifier for the tag."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/files/{fileId}",
        "definition": {
          "entityName": "File",
          "schema": {
            "$ref": "#/backend/entities/File"
          },
          "description": "Stores files uploaded by a specific user. The 'userId' path parameter ensures that only the authenticated user can access their own files.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, matching their Firebase Auth UID."
            },
            {
              "name": "fileId",
              "description": "The unique identifier for the file."
            }
          ]
        }
      },
      {
        "path": "/conversations/{conversationId}",
        "definition": {
          "entityName": "Conversation",
          "schema": {
            "$ref": "#/backend/entities/Conversation"
          },
          "description": "Stores conversation metadata. Access is restricted to participants.",
          "params": [{"name": "conversationId", "description": "The unique identifier for the conversation."}]
        }
      },
      {
        "path": "/conversations/{conversationId}/messages/{messageId}",
        "definition": {
          "entityName": "Message",
          "schema": {
            "$ref": "#/backend/entities/Message"
          },
          "description": "Stores messages for a specific conversation. Access is restricted to participants of the parent conversation.",
          "params": [
            {"name": "conversationId", "description": "The unique identifier for the conversation."},
            {"name": "messageId", "description": "The unique identifier for the message."}
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure data isolation and security by leveraging path-based ownership and denormalization for authorization independence. Each user's data (notes, tags, files) is stored under their unique user ID, enabling simple and secure security rules. This design avoids complex `get()` calls in security rules, ensuring atomic operations and easier debugging. The messaging feature adds a top-level `conversations` collection where each document contains participant IDs, allowing rules to grant access only to those users. Messages are a sub-collection, inheriting the parent conversation's security context."
  }
}

    